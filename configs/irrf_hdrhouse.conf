train{
    expname = default
    dataset_class = datasets.dataset.MeshPoint
    model_class = models.tracer_o3d_irrf.TracerO3d
    irf_loss_class = models.loss.IRFLoss
    
    plot_freq = 10000          # iterations
    ckpt_freq = 20000          # iterations
    num_pixels = 1024
    illum_num_pixels = 256
    
    alpha_milestones = [25000,50000,75000,100000,125000]  # iterations
    alpha_factor = 2
    
    irf_learning_rate = 1e-4
    irf_sched_milestones = [800,1600,2400,3200]   # iterations
    irf_sched_step = 800
    irf_sched_factor = 0.8
    irf_epoch = 4000

    is_hdr_texture = True
    hdr_exposure = 3

    std_jit = 5e-2
    
    env_res = [32,64]
    val_sample_res = [32, 64]
    samples_point_mesh = 1024
    batch_size = 16

    path_mesh = ../reproject/result_master/master.obj
    path_mesh_open3d = ../data/inverse/cyclops-nPOdM9m9ByLM53j4_1/vrproc/hdr_texture/out1.obj
    results = ../results/test_house/
}

val{
    dataset_class = datasets.dataset.ImageMeshPoint
    env_res = [512,1024]
    batch_size = 512
}

loss{
    idr_rgb_weight = 1.0
    eikonal_weight = 0.1
    mask_weight = 100.0
    alpha = 50.0

    sg_rgb_weight = 1.0
    kl_weight = 0.01
    latent_smooth_weight = 0.1
    
    loss_type = L1
}

irf_loss
{
    loss_type = L1
}

models{
    feature_vector_size = 256
    tracer{
        
    }

    incident_radiance_network
    {
        points_multires = 10
        dirs_multires = 4
        dims = [ 512, 512, 512, 512 ,512, 512, 512, 512 ]
    }

    irrf_network
    {
        points_multires = 10
        dims = [ 512, 512, 512, 512]
        p_input_dim = 3
        p_out_dim = 3
    }
}